import cv2
import numpy as np

# Function to perform image segmentation using K-means
def segment_image(image, k):
    # Reshape the image to a 2D array of pixels
    pixels = image.reshape((-1, 3))

    # Convert the pixel values to floating point
    pixels = np.float32(pixels)

    # Define criteria for K-means algorithm and apply it
    criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 10, 1.0)
    _, labels, centers = cv2.kmeans(pixels, k, None, criteria, 10, cv2.KMEANS_RANDOM_CENTERS)

    # Convert the centers to 8-bit values
    centers = np.uint8(centers)

    # Reshape the labels to the original image shape
    segmented_image = centers[labels.flatten()].reshape(image.shape)

    return segmented_image

# Load the input image
image_path = "C:\Users\hp\Desktop"
image = cv2.imread(image_path)

# Perform image segmentation using K-means
k = 4  # Number of clusters/segments
segmented_image = segment_image(image, k)

# Display the original image and the segmented image
cv2.imshow("Original Image", image)
cv2.imshow("Segmented Image", segmented_image)
cv2.waitKey(0)
cv2.destroyAllWindows()